-- A – Básicas

-- Consulta 1
SELECT TITULO, AUTOR
FROM LIBRO
WHERE TIPO = 'no' AND PRECIO_ORI > 21;

-- Consulta 2
SELECT NRO_LIBRO, PRECIO_ORI, EDICION
FROM LIBRO
WHERE TIPO = 'no' OR (PRECIO_ORI > 21 AND EDICION > 1985);

-- Consulta 3
SELECT AUTOR, EDICION
FROM LIBRO
WHERE AUTOR LIKE 'L%';

-- Consulta 4
SELECT AUTOR, EDICION
FROM LIBRO
WHERE NOT AUTOR LIKE 'G%';

-- Consulta 5
SELECT AUTOR, PRECIO_ORI, EDICION
FROM LIBRO
WHERE AUTOR LIKE '%RR%';

-- Consulta 6
SELECT TITULO, EDICION
FROM LIBRO
WHERE PRECIO_ORI < 12 OR PRECIO_ORI > 25;

-- Consulta 7
SELECT DISTINCT TIPO, EDICION
FROM LIBRO
ORDER BY TIPO ASC, EDICION ASC;

-- Consulta 8
SELECT NRO_LIBRO, EDICION, TIPO, PRECIO_ORI, PRECIO_ACT, (PRECIO_ACT - PRECIO_ORI) AS DIFERENCIA
FROM LIBRO
ORDER BY TIPO ASC, DIFERENCIA ASC;

-- Consulta 9
SELECT NRO_LIBRO, EDICION, TIPO, PRECIO_ORI, PRECIO_ACT, (PRECIO_ACT - PRECIO_ORI) AS DIFERENCIA
FROM LIBRO
WHERE TIPO = 'es'
ORDER BY DIFERENCIA ASC;

-- Consulta 10
SELECT NRO_LIBRO, PRECIO_ORI, EDICION
FROM LIBRO
WHERE EDICION > 1985 AND (TIPO = 'no' OR PRECIO_ORI > 21);

-- Consulta 11
SELECT TITULO, AUTOR
FROM LIBRO
WHERE TIPO = 'no' OR PRECIO_ORI > 21;

-- Consulta 12
SELECT TITULO, PRECIO_ORI
FROM LIBRO
WHERE EDICION IN (1948, 1978, 1985);

-- Consulta 13
SELECT TITULO, EDICION
FROM LIBRO
WHERE PRECIO_ORI BETWEEN 12 AND 25;

-- Consulta 14
SELECT TITULO, PRECIO_ORI, EDICION
FROM LIBRO
WHERE TITULO LIKE '%R%S%';

-- Consulta 15
SELECT TITULO, PRECIO_ORI, EDICION
FROM LIBRO
WHERE TITULO LIKE '_A%';

-- Consulta 16
SELECT TITULO, EDICION
FROM LIBRO
WHERE TIPO = 'no'
ORDER BY EDICION ASC;

-- Consulta 17
SELECT NRO_LIBRO, EDICION, TIPO
FROM LIBRO
WHERE PRECIO_ORI > 20
ORDER BY EDICION DESC, NRO_LIBRO ASC;

-- Consulta 18
SELECT NRO_LIBRO, EDICION, TIPO, PRECIO_ORI, PRECIO_ACT, (PRECIO_ACT - PRECIO_ORI) AS DIFERENCIA
FROM LIBRO
WHERE (PRECIO_ACT - PRECIO_ORI) > 10;

-- Consulta 19
SELECT NRO_LIBRO, EDICION, TIPO, PRECIO_ORI, PRECIO_ACT, (PRECIO_ACT - PRECIO_ORI) AS DIFERENCIA
FROM LIBRO
WHERE (PRECIO_ACT - PRECIO_ORI) > 10
ORDER BY DIFERENCIA DESC;

-- B - Funciones de Agregación, Having

-- Consulta 1
SELECT SUM(PRECIO_ORI) AS Suma_Precios_Originales,
       AVG(PRECIO_ORI) AS Promedio_Precios_Originales,
       MIN(PRECIO_ACT) AS Min_Precio_Actual,
       MAX(PRECIO_ACT) AS Max_Precio_Actual
FROM LIBRO
WHERE EDICION > 1970;

-- Consulta 2
SELECT SUM(PRECIO_ORI + PRECIO_ACT) AS Suma_Precios_Total,
       AVG(PRECIO_ORI + PRECIO_ACT) AS Promedio_Precios_Total,
       MIN(PRECIO_ORI - PRECIO_ACT) AS Min_Diferencia_Precios,
       MAX(PRECIO_ORI - PRECIO_ACT) AS Max_Diferencia_Precios
FROM LIBRO
WHERE EDICION > 1970;

-- Consulta 3
SELECT COUNT(*) AS Cantidad_Libros,
       TIPO AS Tipo_Libro,
       MIN(PRECIO_ORI) AS Min_Precio_Original,
       MAX(PRECIO_ORI) AS Max_Precio_Original
FROM LIBRO
WHERE PRECIO_ORI > 45
GROUP BY TIPO;

-- Consulta 4
SELECT TIPO AS Tipo_Libro,
       SUM(PRECIO_ORI) AS Total_Precios_Originales,
       AVG(PRECIO_ACT) AS Promedio_Precios_Actuales
FROM LIBRO
WHERE EDICION <> 1946
GROUP BY TIPO
HAVING SUM(PRECIO_ORI) > 40;

-- Consulta 5
SELECT TIPO AS Tipo_Libro,
       AVG(PRECIO_ORI) AS Promedio_Precios_Originales
FROM LIBRO
GROUP BY TIPO
HAVING AVG(PRECIO_ORI) > (SELECT AVG(PRECIO_ORI) FROM LIBRO);

-- Consulta 6
SELECT TIPO AS Tipo_Libro,
       SUM(PRECIO_ORI) AS Total_Precios_Originales,
       AVG(PRECIO_ACT) AS Promedio_Precios_Actuales
FROM LIBRO
WHERE EDICION BETWEEN 1946 AND 1975
GROUP BY TIPO;

-- Consulta 7
SELECT TIPO AS Tipo_Libro,
       SUM(PRECIO_ORI) AS Total_Precios_Originales,
       AVG(PRECIO_ACT) AS Promedio_Precios_Actuales
FROM LIBRO
WHERE EDICION <> 1946
GROUP BY TIPO
ORDER BY Promedio_Precios_Actuales;

-- Consulta 8 
SELECT TIPO AS Tipo_Libro,
       SUM(PRECIO_ORI) AS Total_Precios_Originales,
       AVG(PRECIO_ACT) AS Promedio_Precios_Actuales
FROM LIBRO
WHERE EDICION BETWEEN 1946 AND 1975
GROUP BY TIPO

-- Consulta 9
SELECT TRABAJO AS Tipo_Trabajo,
       MAX(SALARIO) AS Salario_Maximo
FROM LECTOR
GROUP BY TRABAJO;

-- Consulta 10
SELECT TRABAJO AS Tipo_Trabajo,
       AVG(SALARIO) AS Salario_Promedio
FROM LECTOR
WHERE DIRECCION LIKE '%capital%'
GROUP BY TRABAJO;

-- C - Uso de Operadores Especiales (ALL, ANY) , SubQuerys

-- Consulta 1
SELECT LEFT(NOMBRE, 5) AS Cinco_Primeros_Caracteres
FROM LECTOR;

-- Consulta 2
SELECT NOMBRE, DIRECCION
FROM LECTOR
WHERE NRO_LECTOR IN (SELECT DISTINCT NRO_LECTOR FROM PRESTAMO);

-- Consulta 3
SELECT NRO_LIBRO, TITULO, PRECIO_ACT
FROM LIBRO
WHERE PRECIO_ORI = (SELECT MAX(PRECIO_ORI) FROM LIBRO);

-- Consulta 4
SELECT NRO_LIBRO, TITULO, PRECIO_ORI
FROM LIBRO
WHERE PRECIO_ORI > (SELECT AVG(PRECIO_ACT) FROM LIBRO);

-- Consulta 5
SELECT NRO_LIBRO, TITULO, PRECIO_ORI
FROM LIBRO
WHERE PRECIO_ORI > ALL (SELECT PRECIO_ORI FROM LIBRO WHERE TIPO = 'NO');

-- Consulta 6
SELECT NRO_LIBRO, TITULO, PRECIO_ORI
FROM LIBRO
WHERE PRECIO_ORI > ANY (SELECT PRECIO_ORI FROM LIBRO WHERE TIPO = 'NO');

-- D - Consultas en varias tablas – uso de join (inner join – left join – right join)

-- Consulta 1
SELECT LIBRO.TITULO, PRESTAMO.F_PREST, PRESTAMO.F_DEVOL
FROM LIBRO
INNER JOIN PRESTAMO ON LIBRO.NRO_LIBRO = PRESTAMO.NRO_LIBRO;

-- Consulta 2
SELECT LIBRO.NRO_LIBRO, LIBRO.TITULO, PRESTAMO.F_PREST, PRESTAMO.F_DEVOL
FROM LIBRO
INNER JOIN PRESTAMO ON LIBRO.NRO_LIBRO = PRESTAMO.NRO_LIBRO;

-- Consulta 3
SELECT LECTOR.NRO_LECTOR, LECTOR.NOMBRE, COUNT(PRESTAMO.NRO_LECTOR) AS Cantidad_Prestamos
FROM LECTOR
LEFT JOIN PRESTAMO ON LECTOR.NRO_LECTOR = PRESTAMO.NRO_LECTOR
GROUP BY LECTOR.NRO_LECTOR, LECTOR.NOMBRE;

-- Consulta 4
SELECT LIBRO.NRO_LIBRO, LIBRO.TITULO, COPIAS.NRO_COPIA, COUNT(PRESTAMO.NRO_LIBRO) AS Cantidad_Prestamos
FROM LIBRO
LEFT JOIN COPIAS ON LIBRO.NRO_LIBRO = COPIAS.NRO_LIBRO
LEFT JOIN PRESTAMO ON LIBRO.NRO_LIBRO = PRESTAMO.NRO_LIBRO AND COPIAS.NRO_COPIA = PRESTAMO.NRO_COPIA
GROUP BY LIBRO.NRO_LIBRO, LIBRO.TITULO, COPIAS.NRO_COPIA;

-- Consulta 5
SELECT LIBRO.NRO_LIBRO, LIBRO.TITULO, COUNT(PRESTAMO.NRO_LIBRO) AS Cantidad_Prestamos
FROM LIBRO
LEFT JOIN PRESTAMO ON LIBRO.NRO_LIBRO = PRESTAMO.NRO_LIBRO
WHERE YEAR(PRESTAMO.F_PREST) >= 2012
GROUP BY LIBRO.NRO_LIBRO, LIBRO.TITULO;

-- Consulta 6
SELECT LIBRO.NRO_LIBRO, LIBRO.TITULO, COPIAS.NRO_COPIA, COUNT(PRESTAMO.NRO_LIBRO) AS Cantidad_Prestamos
FROM LIBRO
LEFT JOIN COPIAS ON LIBRO.NRO_LIBRO = COPIAS.NRO_LIBRO
LEFT JOIN PRESTAMO ON LIBRO.NRO_LIBRO = PRESTAMO.NRO_LIBRO AND COPIAS.NRO_COPIA = PRESTAMO.NRO_COPIA
GROUP BY LIBRO.NRO_LIBRO, LIBRO.TITULO, COPIAS.NRO_COPIA
HAVING COUNT(PRESTAMO.NRO_LIBRO) > 1;

-- Consulta 7
SELECT LIBRO.NRO_LIBRO, LIBRO.TITULO, COPIAS.NRO_COPIA, PRESTAMO.F_PREST
FROM LIBRO
LEFT JOIN COPIAS ON LIBRO.NRO_LIBRO = COPIAS.NRO_LIBRO
LEFT JOIN PRESTAMO ON LIBRO.NRO_LIBRO = PRESTAMO.NRO_LIBRO AND COPIAS.NRO_COPIA = PRESTAMO.NRO_COPIA;

-- Consulta 8
SELECT LECTOR.NRO_LECTOR, LECTOR.NOMBRE, LIBRO.NRO_LIBRO, LIBRO.TITULO, TIPOLIBRO.DESCTIPO, PRESTAMO.F_PREST
FROM LECTOR
LEFT JOIN PRESTAMO ON LECTOR.NRO_LECTOR = PRESTAMO.NRO_LECTOR
LEFT JOIN LIBRO ON PRESTAMO.NRO_LIBRO = LIBRO.NRO_LIBRO
LEFT JOIN TIPOLIBRO ON LIBRO.TIPO = TIPOLIBRO.TIPO
WHERE PRESTAMO.F_DEVOL IS NOT NULL AND (TIPOLIBRO.TIPO = 'no' OR TIPOLIBRO.TIPO = 'cu');

-- Consulta 9
SELECT LIBRO.TITULO, LECTOR.NOMBRE
FROM LIBRO
INNER JOIN PRESTAMO ON LIBRO.NRO_LIBRO = PRESTAMO.NRO_LIBRO
INNER JOIN LECTOR ON PRESTAMO.NRO_LECTOR = LECTOR.NRO_LECTOR;

-- Consulta 10
SELECT LECTOR.NRO_LECTOR, LECTOR.NOMBRE, PRESTAMO.F_PREST
FROM LECTOR
INNER JOIN PRESTAMO ON LECTOR.NRO_LECTOR = PRESTAMO.NRO_LECTOR
WHERE PRESTAMO.F_DEVOL IS NULL;

-- Consulta 11
SELECT LECTOR.NRO_LECTOR, LECTOR.NOMBRE, LIBRO.NRO_LIBRO, LIBRO.TITULO, PRESTAMO.F_PREST
FROM LECTOR
INNER JOIN PRESTAMO ON LECTOR.NRO_LECTOR = PRESTAMO.NRO_LECTOR
INNER JOIN LIBRO ON PRESTAMO.NRO_LIBRO = LIBRO.NRO_LIBRO
WHERE PRESTAMO.F_DEVOL IS NOT NULL;

-- Consulta 12
SELECT LECTOR.NRO_LECTOR, LECTOR.NOMBRE, LIBRO.NRO_LIBRO, LIBRO.TITULO, PRESTAMO.F_PREST
FROM LECTOR
INNER JOIN PRESTAMO ON LECTOR.NRO_LECTOR = PRESTAMO.NRO_LECTOR
INNER JOIN LIBRO ON PRESTAMO.NRO_LIBRO = LIBRO.NRO_LIBRO
INNER JOIN TIPOLIBRO ON LIBRO.TIPO = TIPOLIBRO.TIPO
WHERE PRESTAMO.F_DEVOL IS NOT NULL AND (TIPOLIBRO.TIPO = 'no' OR TIPOLIBRO.TIPO = 'cu');

-- Consulta 13
SELECT LECTOR.NRO_LECTOR, LECTOR.NOMBRE, PRESTAMO.F_PREST
FROM LECTOR
LEFT JOIN PRESTAMO ON LECTOR.NRO_LECTOR = PRESTAMO.NRO_LECTOR;

-- E – Insert – Update - Delete
-- Consulta 1
INSERT INTO LIBRO (NRO_LIBRO, TITULO, AUTOR, TIPO, PRECIO_ORI, PRECIO_ACT, EDICION, ESTADO)
VALUES (1001, 'Nuevo Libro', 'Autor Nuevo', 'NF', 50.00, 50.00, 1, 'A');

INSERT INTO COPIAS (NRO_LIBRO, NRO_COPIA, ESTADO)
VALUES (1001, 1, 'D');

-- Consulta 2
UPDATE LIBRO
SET PRECIO_ACT = 35.35
WHERE TITULO = 'LAS MIL Y UNA NOCHES';

-- Consulta 3
DELETE FROM LECTOR
WHERE SALARIO < 1000;

-- F-Plus

-- Consulta 1
SELECT *
FROM LIBRO
FULL OUTER JOIN TIPOLIBRO ON LIBRO.TIPO = TIPOLIBRO.TIPO
FULL OUTER JOIN COPIAS ON LIBRO.NRO_LIBRO = COPIAS.NRO_LIBRO
FULL OUTER JOIN PRESTAMO ON LIBRO.NRO_LIBRO = PRESTAMO.NRO_LIBRO AND COPIAS.NRO_COPIA = PRESTAMO.NRO_COPIA
FULL OUTER JOIN LECTOR ON LECTOR.NRO_LECTOR = PRESTAMO.NRO_LECTOR;
